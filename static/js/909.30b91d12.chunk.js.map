{"version":3,"file":"static/js/909.30b91d12.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/index.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/filter/selectors.js","components/Contact/Contact.styled.js","components/Contact/index.jsx","components/ContactList/ContactList.styled.js","components/ContactList/index.jsx","components/Filter/Filter.styled.js","components/Filter/index.jsx","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/index.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import { styled } from 'styled-components';\n\nexport const Form = styled('form')(() => {\n  return {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 10,\n  };\n});\n\nexport const Input = styled('input')(() => {\n  return {\n    fontSize: 14,\n    color: '#2e2f42',\n    width: 300,\n    height: 30,\n    border: '1px solid #e7e9fc',\n    borderRadius: 4,\n  };\n});\n\nexport const Button = styled('button')(() => {\n  return {\n    fontSize: 14,\n    textAlign: 'center',\n    color: '#2e2f42',\n    backgroundColor: '#ffffff',\n    cursor: 'pointer',\n    padding: '8px 16px',\n    width: 120,\n    minHeight: 30,\n    border: '1px solid #e7e9fc',\n    borderRadius: 4,\n    boxShadow:\n      '0px 2px 1px rgba(0, 0, 0, 0.2), 0px 1px 3px rgba(0, 0, 0, 0.12), 1px 0px 1px rgba(0, 0, 0, 0.14)',\n\n    '&:hover, focus': {\n      boxShadow: 'none',\n    },\n  };\n});\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Form, Input, Button } from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const handleChange = ({ target: { value, name } }) => {\n    if (name === 'name') {\n      setName(value);\n    } else {\n      setNumber(value);\n    }\n  };\n\n  const createContact = dataFromForm => {\n    const isContactExist = contacts.find(\n      contact => contact.name === dataFromForm.name\n    );\n    if (isContactExist) {\n      return alert(`${dataFromForm.name} is already in contacts.`);\n    }\n    dispatch(addContact(dataFromForm));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    createContact({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <label htmlFor={nameInputId}>Name</label>\n      <Input\n        onChange={handleChange}\n        value={name}\n        id={nameInputId}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"[A-Za-z]{1,32}\"\n        placeholder=\"Name\"\n        title=\"Name may contain only letters. For example Adrian, Jacob.\"\n        required\n      />\n      <label htmlFor={numberInputId}>Number</label>\n      <Input\n        onChange={handleChange}\n        value={number}\n        id={numberInputId}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"[0-9]{1,32}\"\n        placeholder=\"123456789\"\n        title=\"Phone number must be digits\"\n        required\n      />\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilterValue = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filter) => {\n    const createContactsByfilter = () => {\n      if (!filter) {\n        return;\n      }\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    };\n    const filteredContacts = createContactsByfilter();\n    return filteredContacts ?? contacts;\n  }\n);\n","import { styled } from 'styled-components';\n\nexport const Element = styled('li')(() => {\n  return {\n    display: 'flex',\n    marginTop: 10,\n  };\n});\n\nexport const Name = styled('p')(() => {\n  return {\n    fontSize: 18,\n  };\n});\n\nexport const Button = styled('button')(() => {\n  return {\n    marginLeft: 20,\n    fontSize: 12,\n    textAlign: 'center',\n    color: '#2e2f42',\n    backgroundColor: '#ffffff',\n    cursor: 'pointer',\n    padding: '2px 4px',\n    width: 80,\n    minHeight: 20,\n    border: '1px solid #e7e9fc',\n    borderRadius: 4,\n    boxShadow:\n      '0px 2px 1px rgba(0, 0, 0, 0.2), 0px 1px 3px rgba(0, 0, 0, 0.12), 1px 0px 1px rgba(0, 0, 0, 0.14)',\n\n    '&:hover, focus': {\n      boxShadow: 'none',\n    },\n  };\n});\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Element, Button, Name } from './Contact.styled';\n\nconst Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(contact.id));\n  };\n\n  return (\n    <Element>\n      <Name>\n        {contact.name}: {contact.number}\n      </Name>\n      <Button type=\"button\" onClick={handleDelete}>\n        Delete\n      </Button>\n    </Element>\n  );\n};\n\nexport default Contact;\n","import { styled } from 'styled-components';\n\nexport const List = styled('ul')(() => {\n  return {\n    margin: '30px 0',\n    width: 650,\n    border: ' 2px outset',\n    borderRadius: 10,\n    padding: '20px 20px',\n  };\n});\n","import { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/filter/selectors';\nimport Contact from '../Contact';\nimport { List } from './ContactList.styled';\n\nconst ContactList = () => {\n  const contactsList = useSelector(selectFilteredContacts);\n\n  return (\n    <>\n      {contactsList && (\n        <List>\n          {contactsList.map(contact => (\n            <Contact key={contact.id} contact={contact} />\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import { styled } from 'styled-components';\n\nexport const Input = styled('input')(() => {\n  return {\n    marginLeft: 20,\n    fontSize: 14,\n    color: '#2e2f42',\n    width: 300,\n    height: 30,\n    border: '1px solid #e7e9fc',\n    borderRadius: 4,\n  };\n});\n","import { useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { setFilter } from 'redux/filter/slice';\nimport { Input } from './Filter.styled';\n\nconst Filter = () => {\n  const filterInputId = nanoid();\n  const dispatch = useDispatch();\n\n  const handleFilter = ({ target: { value } }) => {\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <>\n      <label htmlFor={filterInputId}>Find contacts by name</label>\n      <Input onChange={handleFilter} id={filterInputId} type=\"text\" />\n    </>\n  );\n};\n\nexport default Filter;\n","import { styled } from 'styled-components';\n\nexport const Container = styled('main')(() => {\n  return {\n    margin: '50px auto',\n    width: 700,\n    backgroundColor: '#f4f4fd',\n    borderRadius: 10,\n    padding: '20px 20px',\n  };\n});\n\nexport const Title = styled('h1')(() => {\n  return {\n    marginBottom: 20,\n    fontSize: 30,\n    textAlign: 'center',\n  };\n});\n\nexport const TitleList = styled('h2')(() => {\n  return {\n    marginBottom: 20,\n    fontSize: 24,\n    textAlign: 'center',\n  };\n});\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { Container, Title, TitleList } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  \n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <TitleList>Contacts</TitleList>\n      <Filter />\n      {isLoading && <p>Loading...</p>}\n      {error && <p>Something went wrong. Please, try again.</p>}\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","Form","styled","display","flexDirection","gap","Input","fontSize","color","width","height","border","borderRadius","Button","textAlign","backgroundColor","cursor","padding","minHeight","boxShadow","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","useSelector","nameInputId","nanoid","numberInputId","handleChange","_ref","_ref$target","target","value","_jsxs","onSubmit","e","preventDefault","dataFromForm","find","contact","alert","concat","addContact","createContact","children","_jsx","htmlFor","onChange","id","type","pattern","placeholder","title","required","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectFilteredContacts","filter","filteredContacts","toLowerCase","includes","createContactsByfilter","Element","marginTop","Name","marginLeft","onClick","deleteContact","List","margin","contactsList","_Fragment","Contact","filterInputId","setFilter","Container","Title","marginBottom","TitleList","useEffect","fetchContacts","ContactForm","Filter","ContactList","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}