{"version":3,"file":"static/js/530.beb65386.chunk.js","mappings":"iOAEaA,GAAYC,E,QAAAA,IAAO,MAAPA,CAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6Q,uCCkEtC,EA9DqB,WACnB,IAAMC,GAAeC,EAAAA,EAAAA,MACfC,GAAkBD,EAAAA,EAAAA,MAClBE,GAAcF,EAAAA,EAAAA,MAEdG,GAAWC,EAAAA,EAAAA,MAejB,OACEC,EAAAA,EAAAA,KAACV,EAAS,CAAAW,UACRC,EAAAA,EAAAA,MAAA,QAAMC,SAfW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfT,GACEU,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAGrCL,EAAKQ,OACP,EAIiCb,SAAA,EAC3BD,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAACC,QAASnB,EAAYI,SAAC,UAClCD,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CACRC,QAAQ,WACRC,WAAS,EACTC,KAAK,OACLX,KAAK,OACLY,GAAIxB,EACJyB,UAAQ,KAEVtB,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAACQ,GAAI,CAAEC,GAAI,GAAKR,QAAStB,EAAaO,SAAC,WAGlDD,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CACRC,QAAQ,WACRC,WAAS,EACTC,KAAK,QACLX,KAAK,QACLY,GAAI3B,EACJ4B,UAAQ,KAEVtB,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAACQ,GAAI,CAAEC,GAAI,GAAKR,QAASpB,EAAgBK,SAAC,cAGrDD,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CACRC,QAAQ,WACRC,WAAS,EACTC,KAAK,WACLX,KAAK,WACLY,GAAIzB,EACJ0B,UAAQ,KAEVtB,EAAAA,EAAAA,KAACyB,EAAAA,EAAM,CAACP,QAAQ,WAAWK,GAAI,CAAEC,GAAI,GAAKJ,KAAK,SAAQnB,SAAC,iBAMhE,E,wCChCA,EA5BqB,WACnB,IAAMyB,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IAC1B,OACE5B,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CACGyB,IAAa1B,EAAAA,EAAAA,KAAC+B,EAAAA,EAAc,KAC7B7B,EAAAA,EAAAA,MAAC8B,EAAAA,EAAU,CACTd,QAAQ,KACRe,UAAU,KACVV,GAAI,CAAEW,UAAW,SAAUV,GAAI,EAAGW,MAAOC,EAAAA,EAAAA,MAAgBnC,SAAA,CAExD,IAAI,mBAGPD,EAAAA,EAAAA,KAACqC,EAAY,IACZR,IACC7B,EAAAA,EAAAA,KAACgC,EAAAA,EAAU,CACTd,QAAQ,QACRe,UAAU,IACVV,GAAI,CAAEW,UAAW,SAAUV,GAAI,EAAGW,MAAOC,EAAAA,EAAAA,MAAgBnC,SAC1D,+CAMT,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/index.jsx","pages/RegisterPage/index.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const Container = styled('div')`\n  padding: 8px 12px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 10px;\n  max-width: 350px;\n  background-color: #f7fcfc;\n  border-radius: 10px;\n  border: solid 1px #c5c7c7;\n`;\n","import { useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { register } from 'redux/auth/operations';\nimport { Container } from './RegisterForm.styled';\nimport { Button, InputLabel, TextField } from '@mui/material';\n\nconst RegisterForm = () => {\n  const emailInputId = nanoid();\n  const passwordInputId = nanoid();\n  const userInputId = nanoid();\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <InputLabel htmlFor={userInputId}>Name</InputLabel>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          type=\"text\"\n          name=\"name\"\n          id={userInputId}\n          required\n        />\n        <InputLabel sx={{ mt: 2 }} htmlFor={emailInputId}>\n          Email\n        </InputLabel>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          type=\"email\"\n          name=\"email\"\n          id={emailInputId}\n          required\n        />\n        <InputLabel sx={{ mt: 2 }} htmlFor={passwordInputId}>\n          Password\n        </InputLabel>\n        <TextField\n          variant=\"outlined\"\n          fullWidth\n          type=\"password\"\n          name=\"password\"\n          id={passwordInputId}\n          required\n        />\n        <Button variant=\"outlined\" sx={{ mt: 2 }} type=\"submit\">\n          Register\n        </Button>\n      </form>\n    </Container>\n  );\n};\n\nexport default RegisterForm;\n","import { useSelector } from 'react-redux';\nimport RegisterForm from 'components/RegisterForm';\nimport { selectError, selectIsLoading } from 'redux/auth/selectors';\nimport { LinearProgress, Typography } from '@mui/material';\nimport { blueGrey } from '@mui/material/colors';\n\nconst RegisterPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  return (\n    <main>\n      {isLoading && <LinearProgress />}\n      <Typography\n        variant=\"h5\"\n        component=\"h1\"\n        sx={{ textAlign: 'center', mt: 3, color: blueGrey[900] }}\n      >\n        {' '}\n        Registration\n      </Typography>\n      <RegisterForm />\n      {error && (\n        <Typography\n          variant=\"body2\"\n          component=\"p\"\n          sx={{ textAlign: 'center', mt: 3, color: blueGrey[900] }}\n        >\n          Something went wrong. Please, try again.\n        </Typography>\n      )}\n    </main>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","emailInputId","nanoid","passwordInputId","userInputId","dispatch","useDispatch","_jsx","children","_jsxs","onSubmit","e","preventDefault","form","currentTarget","register","name","elements","value","email","password","reset","InputLabel","htmlFor","TextField","variant","fullWidth","type","id","required","sx","mt","Button","isLoading","useSelector","selectIsLoading","error","selectError","LinearProgress","Typography","component","textAlign","color","blueGrey","RegisterForm"],"sourceRoot":""}