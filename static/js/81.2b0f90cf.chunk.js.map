{"version":3,"file":"static/js/81.2b0f90cf.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/index.jsx","redux/filter/selectors.js","components/Contact/Contact.styled.js","components/Contact/index.jsx","components/ContactList/ContactList.styled.js","components/ContactList/index.jsx","components/Filter/Filter.styled.js","components/Filter/index.jsx","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/index.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import { styled } from 'styled-components';\n\nexport const Form = styled('form')(() => {\n  return {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 10,\n  };\n});\n\nexport const Input = styled('input')(() => {\n  return {\n    fontSize: 14,\n    color: '#2e2f42',\n    width: 300,\n    height: 30,\n    border: '1px solid #e7e9fc',\n    borderRadius: 4,\n  };\n});\n\nexport const Button = styled('button')(() => {\n  return {\n    fontSize: 14,\n    textAlign: 'center',\n    color: '#2e2f42',\n    backgroundColor: '#ffffff',\n    cursor: 'pointer',\n    padding: '8px 16px',\n    width: 120,\n    minHeight: 30,\n    border: '1px solid #e7e9fc',\n    borderRadius: 4,\n    boxShadow:\n      '0px 2px 1px rgba(0, 0, 0, 0.2), 0px 1px 3px rgba(0, 0, 0, 0.12), 1px 0px 1px rgba(0, 0, 0, 0.14)',\n\n    '&:hover, focus': {\n      boxShadow: 'none',\n    },\n  };\n});\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Form, Input, Button } from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const handleChange = ({ target: { value, name } }) => {\n    if (name === 'name') {\n      setName(value);\n    } else {\n      setNumber(value);\n    }\n  };\n\n  const createContact = dataFromForm => {\n    const isContactExist = contacts.find(\n      contact => contact.name === dataFromForm.name\n    );\n    if (isContactExist) {\n      return alert(`${dataFromForm.name} is already in contacts.`);\n    }\n    dispatch(addContact(dataFromForm));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    createContact({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <label htmlFor={nameInputId}>Name</label>\n      <Input\n        onChange={handleChange}\n        value={name}\n        id={nameInputId}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"[A-Za-z]{1,32}\"\n        placeholder=\"Name\"\n        title=\"Name may contain only letters. For example Adrian, Jacob.\"\n        required\n      />\n      <label htmlFor={numberInputId}>Number</label>\n      <Input\n        onChange={handleChange}\n        value={number}\n        id={numberInputId}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"[0-9]{1,32}\"\n        placeholder=\"123456789\"\n        title=\"Phone number must be digits\"\n        required\n      />\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilterValue = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filter) => {\n    const createContactsByfilter = () => {\n      if (!filter) {\n        return;\n      }\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    };\n    const filteredContacts = createContactsByfilter();\n    return filteredContacts ?? contacts;\n  }\n);\n","import { styled } from 'styled-components';\n\nexport const Element = styled('li')(() => {\n  return {\n    display: 'flex',\n    marginTop: 10,\n  };\n});\n\nexport const Name = styled('p')(() => {\n  return {\n    fontSize: 18,\n  };\n});\n\nexport const Button = styled('button')(() => {\n  return {\n    marginLeft: 20,\n    fontSize: 12,\n    textAlign: 'center',\n    color: '#2e2f42',\n    backgroundColor: '#ffffff',\n    cursor: 'pointer',\n    padding: '2px 4px',\n    width: 80,\n    minHeight: 20,\n    border: '1px solid #e7e9fc',\n    borderRadius: 4,\n    boxShadow:\n      '0px 2px 1px rgba(0, 0, 0, 0.2), 0px 1px 3px rgba(0, 0, 0, 0.12), 1px 0px 1px rgba(0, 0, 0, 0.14)',\n\n    '&:hover, focus': {\n      boxShadow: 'none',\n    },\n  };\n});\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Element, Button, Name } from './Contact.styled';\n\nconst Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(contact.id));\n  };\n\n  return (\n    <Element>\n      <Name>\n        {contact.name}: {contact.number}\n      </Name>\n      <Button type=\"button\" onClick={handleDelete}>\n        Delete\n      </Button>\n    </Element>\n  );\n};\n\nexport default Contact;\n","import { styled } from 'styled-components';\n\nexport const List = styled('ul')(() => {\n  return {\n    margin: '30px 0',\n    width: 650,\n    border: ' 2px outset',\n    borderRadius: 10,\n    padding: '20px 20px',\n  };\n});\n","import { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/filter/selectors';\nimport Contact from '../Contact';\nimport { List } from './ContactList.styled';\n\nconst ContactList = () => {\n  const contactsList = useSelector(selectFilteredContacts);\n\n  return (\n    <>\n      {contactsList && (\n        <List>\n          {contactsList.map(contact => (\n            <Contact key={contact.id} contact={contact} />\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import { styled } from 'styled-components';\n\nexport const Input = styled('input')(() => {\n  return {\n    marginLeft: 20,\n    fontSize: 14,\n    color: '#2e2f42',\n    width: 300,\n    height: 30,\n    border: '1px solid #e7e9fc',\n    borderRadius: 4,\n  };\n});\n","import { useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { setFilter } from 'redux/filter/slice';\nimport { Input } from './Filter.styled';\n\nconst Filter = () => {\n  const filterInputId = nanoid();\n  const dispatch = useDispatch();\n\n  const handleFilter = ({ target: { value } }) => {\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <>\n      <label htmlFor={filterInputId}>Find contacts by name</label>\n      <Input onChange={handleFilter} id={filterInputId} type=\"text\" />\n    </>\n  );\n};\n\nexport default Filter;\n","import { styled } from 'styled-components';\n\nexport const Container = styled('div')(() => {\n  return {\n    margin: '50px auto',\n    width: 700,\n    backgroundColor: '#f4f4fd',\n    borderRadius: 10,\n    padding: '20px 20px',\n  };\n});\n\nexport const Title = styled('h1')(() => {\n  return {\n    marginBottom: 20,\n    fontSize: 30,\n    textAlign: 'center',\n  };\n});\n\nexport const TitleList = styled('h2')(() => {\n  return {\n    marginBottom: 20,\n    fontSize: 24,\n    textAlign: 'center',\n  };\n});\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { Container, Title, TitleList } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  \n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <TitleList>Contacts</TitleList>\n      <Filter />\n      {isLoading && <p>Loading...</p>}\n      {error && <p>Something went wrong. Please, try again.</p>}\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","Form","styled","display","flexDirection","gap","Input","fontSize","color","width","height","border","borderRadius","Button","textAlign","backgroundColor","cursor","padding","minHeight","boxShadow","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","useSelector","nameInputId","nanoid","numberInputId","handleChange","_ref","_ref$target","target","value","_jsxs","onSubmit","e","preventDefault","dataFromForm","find","contact","alert","concat","addContact","createContact","children","_jsx","htmlFor","onChange","id","type","pattern","placeholder","title","required","selectFilteredContacts","createSelector","filter","filteredContacts","toLowerCase","includes","createContactsByfilter","Element","marginTop","Name","marginLeft","onClick","deleteContact","List","margin","contactsList","_Fragment","map","Contact","filterInputId","setFilter","Container","Title","marginBottom","TitleList","useEffect","fetchContacts","ContactForm","Filter","ContactList"],"sourceRoot":""}